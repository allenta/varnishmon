// Code generated by mockery v2.52.1. DO NOT EDIT.

package workers

import (
	config "github.com/allenta/varnishmon/pkg/config"
	mock "github.com/stretchr/testify/mock"
)

// MockApplication is an autogenerated mock type for the Application type
type MockApplication struct {
	mock.Mock
}

// Cfg provides a mock function with no fields
func (_m *MockApplication) Cfg() *config.Config {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Cfg")
	}

	var r0 *config.Config
	if rf, ok := ret.Get(0).(func() *config.Config); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*config.Config)
		}
	}

	return r0
}

// NewMockApplication creates a new instance of MockApplication. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockApplication(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockApplication {
	mock := &MockApplication{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
